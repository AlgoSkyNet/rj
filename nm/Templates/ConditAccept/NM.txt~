
# notify conditional acceptance, as for addressing of reviewer comments

# starts with form letter, in character vector formletter below, builds
# up the full letter, and mails it

# arguments:

#    recipientgreeting: e.g. 'Dr. Jones'
#    recipientemail: e.g. 'jones@xyz.edu'
#    msdirectory: subdirectory of Submissions/

conditaccept <- 
   function(recipientgreeting,recipientemail,msdirectory)
{
   formletter[1] <- sub('GREET',recipientgreeting,formletter[1])
   # determine article title from DESCRIPTION file
   descloc <- paste0(
      '../articles/Submissions/',
      msdirectory,
      '/DESCRIPTION')
   syscmd <- paste0('grep Title: ',descloc)
   grepout <- system(syscmd,intern=TRUE)
   papertitle <- substring(grepout,7)
   # insert title into form letter
   formletter[2] <- sub('TITLE',papertitle,formletter[2])
   # remove old letter file, if any, and create new one
   system('rm formletterfile')
   cat(formletter,file='formletterfile',sep='\n\n')
   # check it
   system('cat formletterfile')
   if (readline('edit, say for personalizing? ') == 'y') {
      formletter <- edit(formletter)
      cat(formletter,file='formletterfile',sep='\n\n')
      system('cat formletterfile')
   }
   # build mail command
   mcmd <- 'mutt '
   ipstrcat(mcmd,recipientemail)
   ipstrcat(mcmd,' -s "R Journal paper" ')
   while (TRUE) {
      resp <- readline('type review file name or Enter to finish: ')
      if (resp == '') break
      review <- paste0('../articles/Submissions/',msdirectory,'/',
         'correspondence/',resp)
      ipstrcat(mcmd,' -a ',review)
   }
   ipstrcat(mcmd,' < formletterfile')
   print(mcmd)
   readline('check carefully, then hit Enter')
   system(mcmd)
}

formletter <- c(
   "\n\nHello, GREET.  Norm Matloff of the R Journal editorial board here.",
   "I am happy to inform you that I am accepting your paper, TITLE, for publication, subject to your addressing the reviewer comments, attached", 
   "Please send me your revised files -- ONLY the ones that you change, please -- as well as an itemized document -- plain text or PDF, please -- explaining the changes you made, and the reasons for declining to make some of the suggested changes.","In your revised files, please make sure to continue to comply with R Journals formatting rules etc.",
   "Norm")

# in-place string concatenation; appends the strings in ... to str1,
# assigning back to str1 (at least in name, if not memory location), in
# the spirit of string.append() in Python; here DOTS is one of more
# expressions separated by commas, with each expression being either a
# string or a vector of strings; within a vector, innersep is used as a
# separator, while between vectors it is outersep

# example:

# > x <- 'abc'
# > ipstrcat(x,'de')
# NULL
# > x
# [1] "abcde"


library(gtools)

ipstrcat <- function (str1 = stop("str1 not supplied"), ..., outersep = "",
    innersep = "")
{
    tmp <- substitute((for (str in list(...)) {
        lstr <- length(str)
        tmp <- str[1]
        if (lstr > 1) for (i in 2:lstr) tmp <- paste(tmp, str[i],
            sep = innersep)
        str1 <- paste(str1, tmp, sep = outersep)
    }))
    eval(tmp, parent.frame())
}

